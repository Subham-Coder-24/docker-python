# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build: 
#     runs-on: ubuntu-latest

#     steps:
#       # Checkout the code from the repository
#       - name: Checkout code
#         uses: actions/checkout@v2

#       # Set up Docker Buildx
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       # Log in to DockerHub
#       - name: Log in to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       # Build the generator Docker image
#       - name: Build Generator Image
#         run: |
#           cd generator
#           docker build -t subham24/generator:latest .

#       # Push the generator Docker image to DockerHub
#       - name: Push Generator Image to DockerHub
#         run: |
#           docker push subham24/generator:latest

#       # Build the reader Docker image
#       - name: Build Reader Image
#         run: |
#           cd reader
#           docker build -t subham24/reader:latest .

#       # Push the reader Docker image to DockerHub
#       - name: Push Reader Image to DockerHub
#         run: |
#           docker push subham24/reader:latest

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build: 
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Build Docker images for the generator and reader services
      - name: Build Docker images
        run: docker-compose build

      # Run tests (if any)
      - name: Run tests
        run: docker-compose run generator pytest tests/  # Customize with your testing framework

      # Push Docker images to DockerHub
      - name: Push Docker images to DockerHub
        run: docker-compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Runs after the build job succeeds

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Deploy your application (e.g., to a cloud service)
      - name: Deploy to server
        run: |
          ssh user@your-server "docker-compose down && docker-compose pull && docker-compose up -d"